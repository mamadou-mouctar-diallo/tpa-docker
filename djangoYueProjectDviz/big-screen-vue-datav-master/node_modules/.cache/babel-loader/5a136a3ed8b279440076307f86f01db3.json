{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox9\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox9\\src\\main.vue","mtime":1703850131653},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IHV1aWQgfSBmcm9tICcuLi8uLi8uLi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZCb3JkZXJCb3g5JywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29sb3I6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGJhY2tncm91bmRDb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0cmFuc3BhcmVudCcKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgaWQgPSB1dWlkKCk7CiAgICByZXR1cm4gewogICAgICByZWY6ICdib3JkZXItYm94LTknLAogICAgICBncmFkaWVudElkOiAiYm9yZGVyLWJveC05LWdyYWRpZW50LSIuY29uY2F0KGlkKSwKICAgICAgbWFza0lkOiAiYm9yZGVyLWJveC05LW1hc2stIi5jb25jYXQoaWQpLAogICAgICBkZWZhdWx0Q29sb3I6IFsnIzExZWVmZCcsICcjMDA3OGQyJ10sCiAgICAgIG1lcmdlZENvbG9yOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcjogZnVuY3Rpb24gY29sb3IoKSB7CiAgICAgIHZhciBtZXJnZUNvbG9yID0gdGhpcy5tZXJnZUNvbG9yOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBtZXJnZUNvbG9yOiBmdW5jdGlvbiBtZXJnZUNvbG9yKCkgewogICAgICB2YXIgY29sb3IgPSB0aGlzLmNvbG9yLAogICAgICAgIGRlZmF1bHRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICBtZXJnZUNvbG9yKCk7CiAgfQp9Ow=="},{"version":3,"mappings":"AA8HA;AACA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;QAAA;MAAA;IACA;IACAC;MACAF;MACAC;IACA;EACA;EACAE;IACA;IACA;MACAC;MAEAC;MACAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACAV;MACA;MAEAW;IACA;EACA;EACAC;IACAD;MACA;QAAAH;MAEA;IACA;EACA;EACAK;IACA;IAEAF;EACA;AACA","names":["name","mixins","props","color","type","default","backgroundColor","data","ref","gradientId","maskId","defaultColor","mergedColor","watch","mergeColor","methods","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox9/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-9\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <defs>\n        <linearGradient :id=\"gradientId\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <animate\n            attributeName=\"x1\"\n            values=\"0%;100%;0%\"\n            dur=\"10s\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n\n          <animate\n            attributeName=\"x2\"\n            values=\"100%;0%;100%\"\n            dur=\"10s\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n\n          <stop offset=\"0%\" :stop-color=\"mergedColor[0]\">\n            <animate\n              attributeName=\"stop-color\"\n              :values=\"`${mergedColor[0]};${mergedColor[1]};${mergedColor[0]}`\"\n              dur=\"10s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n          <stop offset=\"100%\" :stop-color=\"mergedColor[1]\">\n            <animate\n              attributeName=\"stop-color\"\n              :values=\"`${mergedColor[1]};${mergedColor[0]};${mergedColor[1]}`\"\n              dur=\"10s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n        </linearGradient>\n\n        <mask :id=\"maskId\">\n          <polyline\n            stroke=\"#fff\"\n            stroke-width=\"3\"\n            fill=\"transparent\"\n            :points=\"`8, ${height * 0.4} 8, 3, ${width * 0.4 + 7}, 3`\"\n          />\n          <polyline\n            fill=\"#fff\"\n            :points=\"\n              `8, ${height * 0.15} 8, 3, ${width * 0.1 + 7}, 3\n              ${width * 0.1}, 8 14, 8 14, ${height * 0.15 - 7}\n            `\"\n          />\n\n          <polyline\n            stroke=\"#fff\"\n            stroke-width=\"3\"\n            fill=\"transparent\"\n            :points=\"`${width * 0.5}, 3 ${width - 3}, 3, ${width - 3}, ${height * 0.25}`\"\n          />\n          <polyline\n            fill=\"#fff\"\n            :points=\"`\n              ${width * 0.52}, 3 ${width * 0.58}, 3\n              ${width * 0.58 - 7}, 9 ${width * 0.52 + 7}, 9\n            `\"\n          />\n          <polyline\n            fill=\"#fff\"\n            :points=\"`\n              ${width * 0.9}, 3 ${width - 3}, 3 ${width - 3}, ${height * 0.1}\n              ${width - 9}, ${height * 0.1 - 7} ${width - 9}, 9 ${width * 0.9 + 7}, 9\n            `\"\n          />\n\n          <polyline\n            stroke=\"#fff\"\n            stroke-width=\"3\"\n            fill=\"transparent\"\n            :points=\"`8, ${height * 0.5} 8, ${height - 3} ${width * 0.3 + 7}, ${height - 3}`\"\n          />\n          <polyline\n            fill=\"#fff\"\n            :points=\"`\n              8, ${height * 0.55} 8, ${height * 0.7}\n              2, ${height * 0.7 - 7} 2, ${height * 0.55 + 7}\n            `\"\n          />\n\n          <polyline\n            stroke=\"#fff\"\n            stroke-width=\"3\"\n            fill=\"transparent\"\n            :points=\"`${width * 0.35}, ${height - 3} ${width - 3}, ${height - 3} ${width - 3}, ${height * 0.35}`\"\n          />\n          <polyline\n            fill=\"#fff\"\n            :points=\"`\n              ${width * 0.92}, ${height - 3} ${width - 3}, ${height - 3} ${width - 3}, ${height * 0.8}\n              ${width - 9}, ${height * 0.8 + 7} ${width - 9}, ${height - 9} ${width * 0.92 + 7}, ${height - 9}\n            `\"\n          />\n        </mask>\n      </defs>\n\n      <polygon :fill=\"backgroundColor\" :points=\"`\n        15, 9 ${width * 0.1 + 1}, 9 ${width * 0.1 + 4}, 6 ${width * 0.52 + 2}, 6\n        ${width * 0.52 + 6}, 10 ${width * 0.58 - 7}, 10 ${width * 0.58 - 2}, 6\n        ${width * 0.9 + 2}, 6 ${width * 0.9 + 6}, 10 ${width - 10}, 10 ${width - 10}, ${height * 0.1 - 6}\n        ${width - 6}, ${height * 0.1 - 1} ${width - 6}, ${height * 0.8 + 1} ${width - 10}, ${height * 0.8 + 6}\n        ${width - 10}, ${height - 10} ${width * 0.92 + 7}, ${height - 10}  ${width * 0.92 + 2}, ${height - 6}\n        11, ${height - 6} 11, ${height * 0.15 - 2} 15, ${height * 0.15 - 7}\n      `\" />\n\n      <rect x=\"0\" y=\"0\" :width=\"width\" :height=\"height\" :fill=\"`url(#${gradientId})`\" :mask=\"`url(#${maskId})`\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox9',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'border-box-9',\n\n      gradientId: `border-box-9-gradient-${id}`,\n      maskId: `border-box-9-mask-${id}`,\n\n      defaultColor: ['#11eefd', '#0078d2'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}