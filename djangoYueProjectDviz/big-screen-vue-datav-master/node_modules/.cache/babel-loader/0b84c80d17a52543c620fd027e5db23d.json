{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue","mtime":1703850131665},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy8xODExNy9EZXNrdG9wL00yL00yQklHREFUQS9kamFuZ29ZdWVQcm9qZWN0RHZpei9iaWctc2NyZWVuLXZ1ZS1kYXRhdi1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzLzE4MTE3L0Rlc2t0b3AvTTIvTTJCSUdEQVRBL2RqYW5nb1l1ZVByb2plY3REdml6L2JpZy1zY3JlZW4tdnVlLWRhdGF2LW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjMnLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHBvaW50U2lkZUxlbmd0aCA9IDc7CiAgICByZXR1cm4gewogICAgICByZWY6ICdkZWNvcmF0aW9uLTMnLAogICAgICBzdmdXSDogWzMwMCwgMzVdLAogICAgICBzdmdTY2FsZTogWzEsIDFdLAogICAgICByb3dOdW06IDIsCiAgICAgIHJvd1BvaW50czogMjUsCiAgICAgIHBvaW50U2lkZUxlbmd0aDogcG9pbnRTaWRlTGVuZ3RoLAogICAgICBoYWxmUG9pbnRTaWRlTGVuZ3RoOiBwb2ludFNpZGVMZW5ndGggLyAyLAogICAgICBwb2ludHM6IFtdLAogICAgICBkZWZhdWx0Q29sb3I6IFsnIzdhY2FlYycsICd0cmFuc3BhcmVudCddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKCkgewogICAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgICAgbWVyZ2VDb2xvcigpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0OiBmdW5jdGlvbiBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIHZhciBjYWxjU1ZHRGF0YSA9IHRoaXMuY2FsY1NWR0RhdGE7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgY2FsY1NWR0RhdGE6IGZ1bmN0aW9uIGNhbGNTVkdEYXRhKCkgewogICAgICB2YXIgY2FsY1BvaW50c1Bvc2l0aW9uID0gdGhpcy5jYWxjUG9pbnRzUG9zaXRpb24sCiAgICAgICAgY2FsY1NjYWxlID0gdGhpcy5jYWxjU2NhbGU7CiAgICAgIGNhbGNQb2ludHNQb3NpdGlvbigpOwogICAgICBjYWxjU2NhbGUoKTsKICAgIH0sCiAgICBjYWxjUG9pbnRzUG9zaXRpb246IGZ1bmN0aW9uIGNhbGNQb2ludHNQb3NpdGlvbigpIHsKICAgICAgdmFyIHN2Z1dIID0gdGhpcy5zdmdXSCwKICAgICAgICByb3dOdW0gPSB0aGlzLnJvd051bSwKICAgICAgICByb3dQb2ludHMgPSB0aGlzLnJvd1BvaW50czsKICAgICAgdmFyIF9zdmdXSCA9IF9zbGljZWRUb0FycmF5KHN2Z1dILCAyKSwKICAgICAgICB3ID0gX3N2Z1dIWzBdLAogICAgICAgIGggPSBfc3ZnV0hbMV07CiAgICAgIHZhciBob3Jpem9udGFsR2FwID0gdyAvIChyb3dQb2ludHMgKyAxKTsKICAgICAgdmFyIHZlcnRpY2FsR2FwID0gaCAvIChyb3dOdW0gKyAxKTsKICAgICAgdmFyIHBvaW50cyA9IG5ldyBBcnJheShyb3dOdW0pLmZpbGwoMCkubWFwKGZ1bmN0aW9uIChmb28sIGkpIHsKICAgICAgICByZXR1cm4gbmV3IEFycmF5KHJvd1BvaW50cykuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKGZvbywgaikgewogICAgICAgICAgcmV0dXJuIFtob3Jpem9udGFsR2FwICogKGogKyAxKSwgdmVydGljYWxHYXAgKiAoaSArIDEpXTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzLnJlZHVjZShmdW5jdGlvbiAoYWxsLCBpdGVtKSB7CiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoYWxsKSwgX3RvQ29uc3VtYWJsZUFycmF5KGl0ZW0pKTsKICAgICAgfSwgW10pOwogICAgfSwKICAgIGNhbGNTY2FsZTogZnVuY3Rpb24gY2FsY1NjYWxlKCkgewogICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoLAogICAgICAgIGhlaWdodCA9IHRoaXMuaGVpZ2h0LAogICAgICAgIHN2Z1dIID0gdGhpcy5zdmdXSDsKICAgICAgdmFyIF9zdmdXSDIgPSBfc2xpY2VkVG9BcnJheShzdmdXSCwgMiksCiAgICAgICAgdyA9IF9zdmdXSDJbMF0sCiAgICAgICAgaCA9IF9zdmdXSDJbMV07CiAgICAgIHRoaXMuc3ZnU2NhbGUgPSBbd2lkdGggLyB3LCBoZWlnaHQgLyBoXTsKICAgIH0sCiAgICBvblJlc2l6ZTogZnVuY3Rpb24gb25SZXNpemUoKSB7CiAgICAgIHZhciBjYWxjU1ZHRGF0YSA9IHRoaXMuY2FsY1NWR0RhdGE7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgbWVyZ2VDb2xvcjogZnVuY3Rpb24gbWVyZ2VDb2xvcigpIHsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICBkZWZhdWx0Q29sb3IgPSB0aGlzLmRlZmF1bHRDb2xvcjsKICAgICAgdGhpcy5tZXJnZWRDb2xvciA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbG9yLCB0cnVlKSwgY29sb3IgfHwgW10pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBtZXJnZUNvbG9yID0gdGhpcy5tZXJnZUNvbG9yOwogICAgbWVyZ2VDb2xvcigpOwogIH0KfTs="},{"version":3,"mappings":";;;;;;;AA8BA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;QAAA;MAAA;IACA;EACA;EACAC;IACA;IAEA;MACAC;MAEAC;MAEAC;MAEAC;MACAC;MAEAC;MACAC;MAEAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACAd;MACA;MAEAe;IACA;EACA;EACAC;IACAC;MACA;MAEAC;IACA;IACAA;MACA;QAAAC;MAEAC;MAEAD;IACA;IACAC;MACA;QAAAb;QAAAC;MAEA;QAAAa;QAAAC;MAEA;MACA;MAEA;QAAA,OACA;UAAA,QACAC,+CACA;QAAA;MAAA;MAEA;QAAA;MAAA;IACA;IACAJ;MACA;QAAAK;QAAAnB;MAEA;QAAAgB;QAAAC;MAEA;IACA;IACAG;MACA;MAEAP;IACA;IACAH;MACA;QAAAH;MAEA;IACA;EACA;EACAc;IACA;IAEAX;EACA;AACA","names":["name","mixins","props","color","type","default","data","ref","svgWH","svgScale","rowNum","rowPoints","pointSideLength","halfPointSideLength","points","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","calcScale","calcPointsPosition","w","h","horizontalGap","height","onResize","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration3/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-3\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n\n      <template\n        v-for=\"(point, i) in points\"\n      >\n        <rect\n          :key=\"i\"\n          :fill=\"mergedColor[0]\"\n          :x=\"point[0] - halfPointSideLength\"\n          :y=\"point[1] - halfPointSideLength\"\n          :width=\"pointSideLength\"\n          :height=\"pointSideLength\"\n        >\n          <animate\n            v-if=\"Math.random() > 0.6\"\n            attributeName=\"fill\"\n            :values=\"`${mergedColor.join(';')}`\"\n            :dur=\"Math.random() + 1 + 's'\"\n            :begin=\"Math.random() * 2\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration3',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const pointSideLength = 7\n\n    return {\n      ref: 'decoration-3',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 2,\n      rowPoints: 25,\n\n      pointSideLength,\n      halfPointSideLength: pointSideLength / 2,\n\n      points: [],\n\n      defaultColor: ['#7acaec', 'transparent'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}