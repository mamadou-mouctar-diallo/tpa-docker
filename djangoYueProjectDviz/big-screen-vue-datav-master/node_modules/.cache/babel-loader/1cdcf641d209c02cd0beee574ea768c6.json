{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox8\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox8\\src\\main.vue","mtime":1703850131652},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IHV1aWQgfSBmcm9tICcuLi8uLi8uLi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZCb3JkZXJCb3g4JywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29sb3I6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGR1cjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDMKICAgIH0sCiAgICBiYWNrZ3JvdW5kQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAndHJhbnNwYXJlbnQnCiAgICB9LAogICAgcmV2ZXJzZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBpZCA9IHV1aWQoKTsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2JvcmRlci1ib3gtOCcsCiAgICAgIHBhdGg6ICJib3JkZXItYm94LTgtcGF0aC0iLmNvbmNhdChpZCksCiAgICAgIGdyYWRpZW50OiAiYm9yZGVyLWJveC04LWdyYWRpZW50LSIuY29uY2F0KGlkKSwKICAgICAgbWFzazogImJvcmRlci1ib3gtOC1tYXNrLSIuY29uY2F0KGlkKSwKICAgICAgZGVmYXVsdENvbG9yOiBbJyMyMzVmYTcnLCAnIzRmZDJkZCddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbGVuZ3RoOiBmdW5jdGlvbiBsZW5ndGgoKSB7CiAgICAgIHZhciB3aWR0aCA9IHRoaXMud2lkdGgsCiAgICAgICAgaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7CiAgICAgIHJldHVybiAod2lkdGggKyBoZWlnaHQgLSA1KSAqIDI7CiAgICB9LAogICAgcGF0aEQ6IGZ1bmN0aW9uIHBhdGhEKCkgewogICAgICB2YXIgcmV2ZXJzZSA9IHRoaXMucmV2ZXJzZSwKICAgICAgICB3aWR0aCA9IHRoaXMud2lkdGgsCiAgICAgICAgaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7CiAgICAgIGlmIChyZXZlcnNlKSByZXR1cm4gIk0gMi41LCAyLjUgTCAyLjUsICIuY29uY2F0KGhlaWdodCAtIDIuNSwgIiBMICIpLmNvbmNhdCh3aWR0aCAtIDIuNSwgIiwgIikuY29uY2F0KGhlaWdodCAtIDIuNSwgIiBMICIpLmNvbmNhdCh3aWR0aCAtIDIuNSwgIiwgMi41IEwgMi41LCAyLjUiKTsKICAgICAgcmV0dXJuICJNMi41LCAyLjUgTCIuY29uY2F0KHdpZHRoIC0gMi41LCAiLCAyLjUgTCIpLmNvbmNhdCh3aWR0aCAtIDIuNSwgIiwgIikuY29uY2F0KGhlaWdodCAtIDIuNSwgIiBMMi41LCAiKS5jb25jYXQoaGVpZ2h0IC0gMi41LCAiIEwyLjUsIDIuNSIpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbG9yOiBmdW5jdGlvbiBjb2xvcigpIHsKICAgICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICAgIG1lcmdlQ29sb3IoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG1lcmdlQ29sb3I6IGZ1bmN0aW9uIG1lcmdlQ29sb3IoKSB7CiAgICAgIHZhciBjb2xvciA9IHRoaXMuY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yID0gdGhpcy5kZWZhdWx0Q29sb3I7CiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"mappings":";;AAkEA;AACA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;QAAA;MAAA;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;IACAG;MACAJ;MACAC;IACA;EACA;EACAI;IACA;IACA;MACAC;MACAC;MACAC;MACAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACAC;MACA;QAAAC;MAEA;IACA;IACAC;MACA;QAAAC;QAAAF;MAEA;MAEA;IACA;EACA;EACAG;IACAlB;MACA;MAEAmB;IACA;EACA;EACAC;IACAD;MACA;QAAAR;MAEA;IACA;EACA;EACAU;IACA;IAEAF;EACA;AACA","names":["name","mixins","props","color","type","default","dur","backgroundColor","reverse","data","ref","path","gradient","mask","defaultColor","mergedColor","computed","length","height","pathD","width","watch","mergeColor","methods","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox8/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-8\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <defs>\n        <path\n          :id=\"path\"\n          :d=\"pathD\"\n          fill=\"transparent\"\n        />\n        <radialGradient\n          :id=\"gradient\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <mask :id=\"mask\">\n          <circle cx=\"0\" cy=\"0\" r=\"150\" :fill=\"`url(#${gradient})`\">\n            <animateMotion\n              :dur=\"`${dur}s`\"\n              :path=\"pathD\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n      </defs>\n\n      <polygon :fill=\"backgroundColor\" :points=\"`5, 5 ${width - 5}, 5 ${width - 5} ${height - 5} 5, ${height - 5}`\" />\n\n      <use\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"1\"\n        :xlink:href=\"`#${path}`\"\n      />\n\n      <use\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"3\"\n        :xlink:href=\"`#${path}`\"\n        :mask=\"`url(#${mask})`\"\n      >\n        <animate\n          attributeName=\"stroke-dasharray\"\n          :from=\"`0, ${length}`\"\n          :to=\"`${length}, 0`\"\n          :dur=\"`${dur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </use>\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox8',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 3\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'border-box-8',\n      path: `border-box-8-path-${id}`,\n      gradient: `border-box-8-gradient-${id}`,\n      mask: `border-box-8-mask-${id}`,\n\n      defaultColor: ['#235fa7', '#4fd2dd'],\n\n      mergedColor: []\n    }\n  },\n  computed: {\n    length () {\n      const { width, height } = this\n\n      return (width + height - 5) * 2\n    },\n    pathD () {\n      const { reverse, width, height } = this\n\n      if (reverse) return `M 2.5, 2.5 L 2.5, ${height - 2.5} L ${width - 2.5}, ${height - 2.5} L ${width - 2.5}, 2.5 L 2.5, 2.5`\n\n      return `M2.5, 2.5 L${width - 2.5}, 2.5 L${width - 2.5}, ${height - 2.5} L2.5, ${height - 2.5} L2.5, 2.5`\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}