{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\src\\components\\echart\\bottom\\bottomLeftChart\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\src\\components\\echart\\bottom\\bottomLeftChart\\index.vue","mtime":1704021622515},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;AAQA;EACAA;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC,aACA;EACAC;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAAC;YAAA,OACAC;cAAAC;YAAA;UAAA;YAAAC;YACA;YACAF;YACAA;YACAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;EACAG;IACA;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACA;QACAC;UACAC;UACAC;UACAC;YACAC;YACAC;cACAC;cACAJ;YACA;UACA;QACA;QACAK,WACA;UACAH;UACAI;UACAC;UACAH;QACA,EACA;QACAI;UACA1B;UACA2B;YACAC;UACA;UACAC;QACA;QACAC;UACAC;UACAC;UACAC;UACAC;UACAC;QAEA;QACAC;UACApC;UACAqC;YACAC;cACAV;YACA;UACA;UACAW;YACAjB;YACAkB;YACAC;UACA;UACAC;YACApB;UACA;QACA;QACAqB,QACA;UACAvB;UACAwB;YAAAtB;UAAA;UACAe;YACAC;cACAV;YACA;UACA;UACAW;YACAM;cACA;cACA;YACA;UACA;QACA,GACA;UACAD;YAAAtB;UAAA;UACAe;YACAC;cACAV;YACA;UACA;UACAW;YACAM;UACA;QACA,EACA;QACAC,SACA;UACAC;UACA3B;UACA4B;UACAC;UACAC;UACAC;UACAC;UACAC;YACAC;cACA1B;YACA;UACA;UACA;UACA5B;YACA;YACA;YACA;cACA;gBACAuD;gBACAF;kBACAzB;gBACA;cACA;YACA;cACA;gBACA2B;gBACAF;kBACAzB;gBACA;cACA;YACA;cACA;YACA;UACA;QACA,GACA;UAEAmB;UACA3B;UACAoC;YACAC;YACAC;YACAC;YACAC;cACAhC;YACA;UACA;UACAiC;UACAR;YACAC;cACAQ;cACAlC,6DACA;gBAAAmC;gBAAAnC;cAAA,GACA;gBAAAmC;gBAAAnC;cAAA,EACA;YACA;UACA;UACA5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAAA;MAEA;MACA;IACA;IACA;IACAgE;MACA;MACA;QACAjC;MACA;MACAA;IACA;IACAkC;MACA;QACA;QACA;QACA;QACA;UACA7B;YACApC;UACA;UACA8C,SACA;YACA9C;UACA,GACA;YACAA;UACA;QAEA;MACA;QACAkE;MACA;IACA;IACAC;MACA;QACA;QACAD;QACAE;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["data","isHover","cdata","category","lineData","barData","rateData","components","mounted","_context","_this","timeout","res","updated","methods","initChart","tooltip","trigger","backgroundColor","axisPointer","type","label","show","dataZoom","start","end","legend","textStyle","color","top","grid","x","width","y","left","right","xAxis","axisLine","lineStyle","axisLabel","interval","rotate","axisTick","yAxis","splitLine","formatter","series","name","smooth","showAllSymbol","symbol","symbolSize","yAxisIndex","itemStyle","normal","value","visualMap","min","max","calculable","inRange","barWidth","barBorderRadius","offset","changeData","updateBarChart","clearInterval","startDataUpdateInterval","setInterval","startActon","cancelAction"],"sourceRoot":"src/components/echart/bottom/bottomLeftChart","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"chart\" style=\"width: 95%;height:480px;place-items: center;\" v-bind:key=\"cdata.lineData[0]\"\n        @mouseenter=\"startActon\" @mouseleave=\"cancelAction\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      isHover:true,\n      cdata: {\n        category: [],\n        lineData: [],\n        barData: [],\n        rateData: []\n      }\n    };\n  },\n  components: {\n  },\n  async mounted() {\n    const res = await this.$http.get('myDviz/bottomLeft',{ timeout: 60000 });\n    // console.log(res.data)\n    this.$set(this.cdata,'category',res.data.marquesDict)\n    this.$set(this.cdata,'barData',res.data.prixsVolumesDict)\n    this.$set(this.cdata,'lineData',res.data.carsVolumesDict)\n  },\n  updated() {\n    this.initChart()\n    this.startDataUpdateInterval()\n  },\n  methods: {\n    initChart(){\n      this.myChart = this.$echarts.init(this.$refs.chart)\n      const option = {\n          tooltip: {\n            trigger: \"axis\",\n            backgroundColor: \"rgba(255,255,255,0.1)\",\n            axisPointer: {\n              type: \"shadow\",\n              label: {\n                show: true,\n                backgroundColor: \"#7B7DDC\"\n              }\n            }\n          },\n        dataZoom:[\n          {\n            type:\"slider\",\n            start:0,\n            end:80,\n            show:false\n          }\n        ],\n          legend: {\n            data: [\"Valeur totale\", \"Nombre total\", \"yyy\"],\n            textStyle: {\n              color: \"#B4B4B4\"\n            },\n            top: \"0%\"\n          },\n          grid: {\n            x: \"8%\",\n            width: \"84%\",\n            y: \"4%\",\n            left: '10%',\n            right: '6%',\n\n          },\n          xAxis: {\n              data: this.cdata.category,\n              axisLine: {\n                lineStyle: {\n                  color: \"#B4B4B4\"\n                }\n              },\n              axisLabel:{\n                show:true,\n                interval:0,\n                rotate: 45\n              },\n              axisTick: {\n                show: false\n              }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              splitLine: { show: false },\n              axisLine: {\n                lineStyle: {\n                  color: \"#B4B4B4\"\n                }\n              },\n              axisLabel: {\n                formatter: function (value) {\n                  //  Millions pour Y\n                  return (value / 1000000).toFixed(1) + 'M';\n                }\n              }\n            },\n            {\n              splitLine: { show: false },\n              axisLine: {\n                lineStyle: {\n                  color: \"#B4B4B4\"\n                }\n              },\n              axisLabel: {\n                formatter: \"{value} \"\n              }\n            }\n          ],\n          series: [\n            {\n              name: \"Nombre Total\",\n              type: \"line\",\n              smooth: true,\n              showAllSymbol: true,\n              symbol: \"emptyCircle\",\n              symbolSize: 8,\n              yAxisIndex: 1,\n              itemStyle: {\n                normal: {\n                  color: \"#F02FC2\"\n                }\n              },\n              // data: this.cdata.lineData\n              data: this.cdata.lineData.map(value => {\n                        const max = Math.max(...this.cdata.lineData);\n                        const min = Math.min(...this.cdata.lineData);\n                          if (value === max) {\n                            return {\n                              value: value,\n                              itemStyle: {\n                                color: '#FFCC00' // max\n                              }\n                            };\n                          } else if (value === min) {\n                            return {\n                              value: value,\n                              itemStyle: {\n                                color: '#FF3333' // min\n                              }\n                            };\n                          } else {\n                            return value;\n                          }\n                        })\n            },\n            {\n\n              name: \"Valeur Totale\",\n              type: \"bar\",\n              visualMap: {\n                  min: Math.min(this.cdata.barData),\n                  max: Math.max(this.cdata.barData),\n                  calculable: true,\n                  inRange: {\n                    color: ['#FF3333', '#FFCC00']\n                  }\n                },\n              barWidth: 8,\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 5,\n                  color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    { offset: 0, color: \"#956FD4\" },\n                    { offset: 1, color: \"#3EACE5\" }\n                  ])\n                }\n              },\n              data: this.cdata.barData\n            },\n            // {\n            //   name: \"yyy\",\n            //   type: \"bar\",\n            //   barGap: \"-100%\",\n            //   barWidth: 10,\n            //   itemStyle: {\n            //     normal: {\n            //       barBorderRadius: 5,\n            //       color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //         { offset: 0, color: \"rgba(156,107,211,0.8)\" },\n            //         { offset: 0.2, color: \"rgba(156,107,211,0.5)\" },\n            //         { offset: 1, color: \"rgba(156,107,211,0.2)\" }\n            //       ])\n            //     }\n            //   },\n            //   z: -12,\n            //   data: this.cdata.lineData\n            // }\n          ]\n        }\n      this.myChart.setOption(option);\n    },\n    // Animation\n    changeData(x){\n      var st = x[0]\n      for (var i= 0;i<x.length-1;i++){\n        x[i]=x[i+1]\n      }\n      x[x.length-1]=st\n    },\n    updateBarChart(){\n      if(this.isHover==true){\n        this.changeData(this.cdata.category)\n        this.changeData(this.cdata.lineData)\n        this.changeData(this.cdata.barData)\n        this.myChart.setOption({\n          xAxis:{\n            data:this.cdata.category\n          },\n          series :[\n            {\n              data:this.cdata.lineData\n            },\n            {\n              data: this.cdata.barData\n            }\n          ]\n        })\n      }else{\n        clearInterval(this.timer)\n      }\n    },\n    startDataUpdateInterval(){\n      if(this.isHover==true){\n        const interval=2000\n        clearInterval(this.timer)\n        setInterval(this.updateBarChart,interval)\n      }\n    },\n    //Animation si la souris n'est pas là, immobilité si la souris est là.\n    startActon(){\n      this.isHover=false\n    },\n    cancelAction(){\n      this.isHover=true\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]}]}