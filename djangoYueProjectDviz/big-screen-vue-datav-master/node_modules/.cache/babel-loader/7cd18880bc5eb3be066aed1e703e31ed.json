{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1703850131683},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovVXNlcnMvMTgxMTcvRGVza3RvcC9NMi9NMkJJR0RBVEEvZGphbmdvWXVlUHJvamVjdER2aXovYmlnLXNjcmVlbi12dWUtZGF0YXYtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvMTgxMTcvRGVza3RvcC9NMi9NMkJJR0RBVEEvZGphbmdvWXVlUHJvamVjdER2aXovYmlnLXNjcmVlbi12dWUtZGF0YXYtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvMTgxMTcvRGVza3RvcC9NMi9NMkJJR0RBVEEvZGphbmdvWXVlUHJvamVjdER2aXovYmlnLXNjcmVlbi12dWUtZGF0YXYtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy8xODExNy9EZXNrdG9wL00yL00yQklHREFUQS9kamFuZ29ZdWVQcm9qZWN0RHZpei9iaWctc2NyZWVuLXZ1ZS1kYXRhdi1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zaGlmdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2U2Nyb2xsQm9hcmQnLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb25maWc6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZWY6ICdzY3JvbGwtYm9hcmQnLAogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEJvYXJkIGhlYWRlcgogICAgICAgICAqIEB0eXBlIHtBcnJheTxTdHJpbmc+fQogICAgICAgICAqIEBkZWZhdWx0IGhlYWRlciA9IFtdCiAgICAgICAgICogQGV4YW1wbGUgaGVhZGVyID0gWydjb2x1bW4xJywgJ2NvbHVtbjInLCAnY29sdW1uMyddCiAgICAgICAgICovCiAgICAgICAgaGVhZGVyOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQm9hcmQgZGF0YQogICAgICAgICAqIEB0eXBlIHtBcnJheTxBcnJheT59CiAgICAgICAgICogQGRlZmF1bHQgZGF0YSA9IFtdCiAgICAgICAgICovCiAgICAgICAgZGF0YTogW10sCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFJvdyBudW0KICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IHJvd051bSA9IDUKICAgICAgICAgKi8KICAgICAgICByb3dOdW06IDUsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEhlYWRlciBiYWNrZ3JvdW5kIGNvbG9yCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBoZWFkZXJCR0MgPSAnIzAwQkFGRicKICAgICAgICAgKi8KICAgICAgICBoZWFkZXJCR0M6ICcjMDBCQUZGJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gT2RkIHJvdyBiYWNrZ3JvdW5kIGNvbG9yCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBvZGRSb3dCR0MgPSAnIzAwM0I1MScKICAgICAgICAgKi8KICAgICAgICBvZGRSb3dCR0M6ICcjMDAzQjUxJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gRXZlbiByb3cgYmFja2dyb3VuZCBjb2xvcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgZXZlblJvd0JHQyA9ICcjMDAzQjUxJwogICAgICAgICAqLwogICAgICAgIGV2ZW5Sb3dCR0M6ICcjMEEyNzMyJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gU2Nyb2xsIHdhaXQgdGltZQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9CiAgICAgICAgICogQGRlZmF1bHQgd2FpdFRpbWUgPSAyMDAwCiAgICAgICAgICovCiAgICAgICAgd2FpdFRpbWU6IDIwMDAsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEhlYWRlciBoZWlnaHQKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IGhlYWRlckhlaWdodCA9IDM1CiAgICAgICAgICovCiAgICAgICAgaGVhZGVySGVpZ2h0OiAzNSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29sdW1uIHdpZHRoCiAgICAgICAgICogQHR5cGUge0FycmF5PE51bWJlcj59CiAgICAgICAgICogQGRlZmF1bHQgY29sdW1uV2lkdGggPSBbXQogICAgICAgICAqLwogICAgICAgIGNvbHVtbldpZHRoOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29sdW1uIGFsaWduCiAgICAgICAgICogQHR5cGUge0FycmF5PFN0cmluZz59CiAgICAgICAgICogQGRlZmF1bHQgYWxpZ24gPSBbXQogICAgICAgICAqIEBleGFtcGxlIGFsaWduID0gWydsZWZ0JywgJ2NlbnRlcicsICdyaWdodCddCiAgICAgICAgICovCiAgICAgICAgYWxpZ246IFtdLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBTaG93IGluZGV4CiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICogQGRlZmF1bHQgaW5kZXggPSBmYWxzZQogICAgICAgICAqLwogICAgICAgIGluZGV4OiBmYWxzZSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gaW5kZXggSGVhZGVyCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBpbmRleEhlYWRlciA9ICcjJwogICAgICAgICAqLwogICAgICAgIGluZGV4SGVhZGVyOiAnIycsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENhcm91c2VsIHR5cGUKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGNhcm91c2VsID0gJ3NpbmdsZScKICAgICAgICAgKiBAZXhhbXBsZSBjYXJvdXNlbCA9ICdzaW5nbGUnIHwgJ3BhZ2UnCiAgICAgICAgICovCiAgICAgICAgY2Fyb3VzZWw6ICdzaW5nbGUnLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBQYXVzZSBzY3JvbGwgd2hlbiBtb3VzZSBob3ZlcmVkCiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICogQGRlZmF1bHQgaG92ZXJQYXVzZSA9IHRydWUKICAgICAgICAgKiBAZXhhbXBsZSBob3ZlclBhdXNlID0gdHJ1ZSB8IGZhbHNlCiAgICAgICAgICovCiAgICAgICAgaG92ZXJQYXVzZTogdHJ1ZQogICAgICB9LAogICAgICBtZXJnZWRDb25maWc6IG51bGwsCiAgICAgIGhlYWRlcjogW10sCiAgICAgIHJvd3NEYXRhOiBbXSwKICAgICAgcm93czogW10sCiAgICAgIHdpZHRoczogW10sCiAgICAgIGhlaWdodHM6IFtdLAogICAgICBhdmdIZWlnaHQ6IDAsCiAgICAgIGFsaWduczogW10sCiAgICAgIGFuaW1hdGlvbkluZGV4OiAwLAogICAgICBhbmltYXRpb25IYW5kbGVyOiAnJywKICAgICAgdXBkYXRlcjogMCwKICAgICAgbmVlZENhbGM6IGZhbHNlCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgc3RvcEFuaW1hdGlvbiA9IHRoaXMuc3RvcEFuaW1hdGlvbiwKICAgICAgICBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICAgIHN0b3BBbmltYXRpb24oKTsKICAgICAgdGhpcy5hbmltYXRpb25JbmRleCA9IDA7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVIb3ZlcjogZnVuY3Rpb24gaGFuZGxlSG92ZXIoZW50ZXIsIHJpLCBjaSwgcm93LCBjZWlsKSB7CiAgICAgIHZhciBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBlbWl0RXZlbnQgPSB0aGlzLmVtaXRFdmVudCwKICAgICAgICBzdG9wQW5pbWF0aW9uID0gdGhpcy5zdG9wQW5pbWF0aW9uLAogICAgICAgIGFuaW1hdGlvbiA9IHRoaXMuYW5pbWF0aW9uOwogICAgICBpZiAoZW50ZXIpIGVtaXRFdmVudCgnbW91c2VvdmVyJywgcmksIGNpLCByb3csIGNlaWwpOwogICAgICBpZiAoIW1lcmdlZENvbmZpZy5ob3ZlclBhdXNlKSByZXR1cm47CiAgICAgIGlmIChlbnRlcikgewogICAgICAgIHN0b3BBbmltYXRpb24oKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhbmltYXRpb24odHJ1ZSk7CiAgICAgIH0KICAgIH0sCiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQ6IGZ1bmN0aW9uIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCgpIHsKICAgICAgdmFyIGNhbGNEYXRhID0gdGhpcy5jYWxjRGF0YTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0sCiAgICBvblJlc2l6ZTogZnVuY3Rpb24gb25SZXNpemUoKSB7CiAgICAgIHZhciBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBjYWxjV2lkdGhzID0gdGhpcy5jYWxjV2lkdGhzLAogICAgICAgIGNhbGNIZWlnaHRzID0gdGhpcy5jYWxjSGVpZ2h0czsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybjsKICAgICAgY2FsY1dpZHRocygpOwogICAgICBjYWxjSGVpZ2h0cygpOwogICAgfSwKICAgIGNhbGNEYXRhOiBmdW5jdGlvbiBjYWxjRGF0YSgpIHsKICAgICAgdmFyIG1lcmdlQ29uZmlnID0gdGhpcy5tZXJnZUNvbmZpZywKICAgICAgICBjYWxjSGVhZGVyRGF0YSA9IHRoaXMuY2FsY0hlYWRlckRhdGEsCiAgICAgICAgY2FsY1Jvd3NEYXRhID0gdGhpcy5jYWxjUm93c0RhdGE7CiAgICAgIG1lcmdlQ29uZmlnKCk7CiAgICAgIGNhbGNIZWFkZXJEYXRhKCk7CiAgICAgIGNhbGNSb3dzRGF0YSgpOwogICAgICB2YXIgY2FsY1dpZHRocyA9IHRoaXMuY2FsY1dpZHRocywKICAgICAgICBjYWxjSGVpZ2h0cyA9IHRoaXMuY2FsY0hlaWdodHMsCiAgICAgICAgY2FsY0FsaWducyA9IHRoaXMuY2FsY0FsaWduczsKICAgICAgY2FsY1dpZHRocygpOwogICAgICBjYWxjSGVpZ2h0cygpOwogICAgICBjYWxjQWxpZ25zKCk7CiAgICAgIHZhciBhbmltYXRpb24gPSB0aGlzLmFuaW1hdGlvbjsKICAgICAgYW5pbWF0aW9uKHRydWUpOwogICAgfSwKICAgIG1lcmdlQ29uZmlnOiBmdW5jdGlvbiBtZXJnZUNvbmZpZygpIHsKICAgICAgdmFyIGNvbmZpZyA9IHRoaXMuY29uZmlnLAogICAgICAgIGRlZmF1bHRDb25maWcgPSB0aGlzLmRlZmF1bHRDb25maWc7CiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KTsKICAgIH0sCiAgICBjYWxjSGVhZGVyRGF0YTogZnVuY3Rpb24gY2FsY0hlYWRlckRhdGEoKSB7CiAgICAgIHZhciBfdGhpcyRtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBoZWFkZXIgPSBfdGhpcyRtZXJnZWRDb25maWcuaGVhZGVyLAogICAgICAgIGluZGV4ID0gX3RoaXMkbWVyZ2VkQ29uZmlnLmluZGV4LAogICAgICAgIGluZGV4SGVhZGVyID0gX3RoaXMkbWVyZ2VkQ29uZmlnLmluZGV4SGVhZGVyOwogICAgICBpZiAoIWhlYWRlci5sZW5ndGgpIHsKICAgICAgICB0aGlzLmhlYWRlciA9IFtdOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBoZWFkZXIgPSBfdG9Db25zdW1hYmxlQXJyYXkoaGVhZGVyKTsKICAgICAgaWYgKGluZGV4KSBoZWFkZXIudW5zaGlmdChpbmRleEhlYWRlcik7CiAgICAgIHRoaXMuaGVhZGVyID0gaGVhZGVyOwogICAgfSwKICAgIGNhbGNSb3dzRGF0YTogZnVuY3Rpb24gY2FsY1Jvd3NEYXRhKCkgewogICAgICB2YXIgX3RoaXMkbWVyZ2VkQ29uZmlnMiA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgIGRhdGEgPSBfdGhpcyRtZXJnZWRDb25maWcyLmRhdGEsCiAgICAgICAgaW5kZXggPSBfdGhpcyRtZXJnZWRDb25maWcyLmluZGV4LAogICAgICAgIGhlYWRlckJHQyA9IF90aGlzJG1lcmdlZENvbmZpZzIuaGVhZGVyQkdDLAogICAgICAgIHJvd051bSA9IF90aGlzJG1lcmdlZENvbmZpZzIucm93TnVtOwogICAgICBpZiAoaW5kZXgpIHsKICAgICAgICBkYXRhID0gZGF0YS5tYXAoZnVuY3Rpb24gKHJvdywgaSkgewogICAgICAgICAgcm93ID0gX3RvQ29uc3VtYWJsZUFycmF5KHJvdyk7CiAgICAgICAgICB2YXIgaW5kZXhUYWcgPSAiPHNwYW4gY2xhc3M9XCJpbmRleFwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIi5jb25jYXQoaGVhZGVyQkdDLCAiO1wiPiIpLmNvbmNhdChpICsgMSwgIjwvc3Bhbj4iKTsKICAgICAgICAgIHJvdy51bnNoaWZ0KGluZGV4VGFnKTsKICAgICAgICAgIHJldHVybiByb3c7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgZGF0YSA9IGRhdGEubWFwKGZ1bmN0aW9uIChjZWlscywgaSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjZWlsczogY2VpbHMsCiAgICAgICAgICByb3dJbmRleDogaQogICAgICAgIH07CiAgICAgIH0pOwogICAgICB2YXIgcm93TGVuZ3RoID0gZGF0YS5sZW5ndGg7CiAgICAgIGlmIChyb3dMZW5ndGggPiByb3dOdW0gJiYgcm93TGVuZ3RoIDwgMiAqIHJvd051bSkgewogICAgICAgIGRhdGEgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGRhdGEpLCBfdG9Db25zdW1hYmxlQXJyYXkoZGF0YSkpOwogICAgICB9CiAgICAgIGRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGQpLCB7fSwgewogICAgICAgICAgc2Nyb2xsOiBpCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0aGlzLnJvd3NEYXRhID0gZGF0YTsKICAgICAgdGhpcy5yb3dzID0gZGF0YTsKICAgIH0sCiAgICBjYWxjV2lkdGhzOiBmdW5jdGlvbiBjYWxjV2lkdGhzKCkgewogICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoLAogICAgICAgIG1lcmdlZENvbmZpZyA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgIHJvd3NEYXRhID0gdGhpcy5yb3dzRGF0YTsKICAgICAgdmFyIGNvbHVtbldpZHRoID0gbWVyZ2VkQ29uZmlnLmNvbHVtbldpZHRoLAogICAgICAgIGhlYWRlciA9IG1lcmdlZENvbmZpZy5oZWFkZXI7CiAgICAgIHZhciB1c2VkV2lkdGggPSBjb2x1bW5XaWR0aC5yZWR1Y2UoZnVuY3Rpb24gKGFsbCwgdykgewogICAgICAgIHJldHVybiBhbGwgKyB3OwogICAgICB9LCAwKTsKICAgICAgdmFyIGNvbHVtbk51bSA9IDA7CiAgICAgIGlmIChyb3dzRGF0YVswXSkgewogICAgICAgIGNvbHVtbk51bSA9IHJvd3NEYXRhWzBdLmNlaWxzLmxlbmd0aDsKICAgICAgfSBlbHNlIGlmIChoZWFkZXIubGVuZ3RoKSB7CiAgICAgICAgY29sdW1uTnVtID0gaGVhZGVyLmxlbmd0aDsKICAgICAgfQogICAgICB2YXIgYXZnV2lkdGggPSAod2lkdGggLSB1c2VkV2lkdGgpIC8gKGNvbHVtbk51bSAtIGNvbHVtbldpZHRoLmxlbmd0aCk7CiAgICAgIHZhciB3aWR0aHMgPSBuZXcgQXJyYXkoY29sdW1uTnVtKS5maWxsKGF2Z1dpZHRoKTsKICAgICAgdGhpcy53aWR0aHMgPSBkZWVwTWVyZ2Uod2lkdGhzLCBjb2x1bW5XaWR0aCk7CiAgICB9LAogICAgY2FsY0hlaWdodHM6IGZ1bmN0aW9uIGNhbGNIZWlnaHRzKCkgewogICAgICB2YXIgb25yZXNpemUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlOwogICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5oZWlnaHQsCiAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgaGVhZGVyID0gdGhpcy5oZWFkZXI7CiAgICAgIHZhciBoZWFkZXJIZWlnaHQgPSBtZXJnZWRDb25maWcuaGVhZGVySGVpZ2h0LAogICAgICAgIHJvd051bSA9IG1lcmdlZENvbmZpZy5yb3dOdW0sCiAgICAgICAgZGF0YSA9IG1lcmdlZENvbmZpZy5kYXRhOwogICAgICB2YXIgYWxsSGVpZ2h0ID0gaGVpZ2h0OwogICAgICBpZiAoaGVhZGVyLmxlbmd0aCkgYWxsSGVpZ2h0IC09IGhlYWRlckhlaWdodDsKICAgICAgdmFyIGF2Z0hlaWdodCA9IGFsbEhlaWdodCAvIHJvd051bTsKICAgICAgdGhpcy5hdmdIZWlnaHQgPSBhdmdIZWlnaHQ7CiAgICAgIGlmICghb25yZXNpemUpIHRoaXMuaGVpZ2h0cyA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCkuZmlsbChhdmdIZWlnaHQpOwogICAgfSwKICAgIGNhbGNBbGlnbnM6IGZ1bmN0aW9uIGNhbGNBbGlnbnMoKSB7CiAgICAgIHZhciBoZWFkZXIgPSB0aGlzLmhlYWRlciwKICAgICAgICBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIGNvbHVtbk51bSA9IGhlYWRlci5sZW5ndGg7CiAgICAgIHZhciBhbGlnbnMgPSBuZXcgQXJyYXkoY29sdW1uTnVtKS5maWxsKCdsZWZ0Jyk7CiAgICAgIHZhciBhbGlnbiA9IG1lcmdlZENvbmZpZy5hbGlnbjsKICAgICAgdGhpcy5hbGlnbnMgPSBkZWVwTWVyZ2UoYWxpZ25zLCBhbGlnbik7CiAgICB9LAogICAgYW5pbWF0aW9uOiBmdW5jdGlvbiBhbmltYXRpb24oKSB7CiAgICAgIHZhciBfYXJndW1lbnRzID0gYXJndW1lbnRzLAogICAgICAgIF90aGlzID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMkaGVpZ2h0czsKICAgICAgICB2YXIgc3RhcnQsIG5lZWRDYWxjLCBjYWxjSGVpZ2h0cywgY2FsY1Jvd3NEYXRhLCBhdmdIZWlnaHQsIGFuaW1hdGlvbkluZGV4LCBtZXJnZWRDb25maWcsIHJvd3NEYXRhLCBhbmltYXRpb24sIHVwZGF0ZXIsIHdhaXRUaW1lLCBjYXJvdXNlbCwgcm93TnVtLCByb3dMZW5ndGgsIGFuaW1hdGlvbk51bSwgcm93cywgYmFjazsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGFydCA9IF9hcmd1bWVudHMubGVuZ3RoID4gMCAmJiBfYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzWzBdIDogZmFsc2U7CiAgICAgICAgICAgICAgbmVlZENhbGMgPSBfdGhpcy5uZWVkQ2FsYywgY2FsY0hlaWdodHMgPSBfdGhpcy5jYWxjSGVpZ2h0cywgY2FsY1Jvd3NEYXRhID0gX3RoaXMuY2FsY1Jvd3NEYXRhOwogICAgICAgICAgICAgIGlmIChuZWVkQ2FsYykgewogICAgICAgICAgICAgICAgY2FsY1Jvd3NEYXRhKCk7CiAgICAgICAgICAgICAgICBjYWxjSGVpZ2h0cygpOwogICAgICAgICAgICAgICAgX3RoaXMubmVlZENhbGMgPSBmYWxzZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgYXZnSGVpZ2h0ID0gX3RoaXMuYXZnSGVpZ2h0LCBhbmltYXRpb25JbmRleCA9IF90aGlzLmFuaW1hdGlvbkluZGV4LCBtZXJnZWRDb25maWcgPSBfdGhpcy5tZXJnZWRDb25maWcsIHJvd3NEYXRhID0gX3RoaXMucm93c0RhdGEsIGFuaW1hdGlvbiA9IF90aGlzLmFuaW1hdGlvbiwgdXBkYXRlciA9IF90aGlzLnVwZGF0ZXI7CiAgICAgICAgICAgICAgd2FpdFRpbWUgPSBtZXJnZWRDb25maWcud2FpdFRpbWUsIGNhcm91c2VsID0gbWVyZ2VkQ29uZmlnLmNhcm91c2VsLCByb3dOdW0gPSBtZXJnZWRDb25maWcucm93TnVtOwogICAgICAgICAgICAgIHJvd0xlbmd0aCA9IHJvd3NEYXRhLmxlbmd0aDsKICAgICAgICAgICAgICBpZiAoIShyb3dOdW0gPj0gcm93TGVuZ3RoKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBpZiAoIXN0YXJ0KSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQocmVzb2x2ZSwgd2FpdFRpbWUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGlmICghKHVwZGF0ZXIgIT09IF90aGlzLnVwZGF0ZXIpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgYW5pbWF0aW9uTnVtID0gY2Fyb3VzZWwgPT09ICdzaW5nbGUnID8gMSA6IHJvd051bTsKICAgICAgICAgICAgICByb3dzID0gcm93c0RhdGEuc2xpY2UoYW5pbWF0aW9uSW5kZXgpOwogICAgICAgICAgICAgIHJvd3MucHVzaC5hcHBseShyb3dzLCBfdG9Db25zdW1hYmxlQXJyYXkocm93c0RhdGEuc2xpY2UoMCwgYW5pbWF0aW9uSW5kZXgpKSk7CiAgICAgICAgICAgICAgX3RoaXMucm93cyA9IHJvd3Muc2xpY2UoMCwgY2Fyb3VzZWwgPT09ICdwYWdlJyA/IHJvd051bSAqIDIgOiByb3dOdW0gKyAxKTsKICAgICAgICAgICAgICBfdGhpcy5oZWlnaHRzID0gbmV3IEFycmF5KHJvd0xlbmd0aCkuZmlsbChhdmdIZWlnaHQpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgaWYgKCEodXBkYXRlciAhPT0gX3RoaXMudXBkYXRlcikpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICAoX3RoaXMkaGVpZ2h0cyA9IF90aGlzLmhlaWdodHMpLnNwbGljZS5hcHBseShfdGhpcyRoZWlnaHRzLCBbMCwgYW5pbWF0aW9uTnVtXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KG5ldyBBcnJheShhbmltYXRpb25OdW0pLmZpbGwoMCkpKSk7CiAgICAgICAgICAgICAgYW5pbWF0aW9uSW5kZXggKz0gYW5pbWF0aW9uTnVtOwogICAgICAgICAgICAgIGJhY2sgPSBhbmltYXRpb25JbmRleCAtIHJvd0xlbmd0aDsKICAgICAgICAgICAgICBpZiAoYmFjayA+PSAwKSBhbmltYXRpb25JbmRleCA9IGJhY2s7CiAgICAgICAgICAgICAgX3RoaXMuYW5pbWF0aW9uSW5kZXggPSBhbmltYXRpb25JbmRleDsKICAgICAgICAgICAgICBfdGhpcy5hbmltYXRpb25IYW5kbGVyID0gc2V0VGltZW91dChhbmltYXRpb24sIHdhaXRUaW1lIC0gMzAwKTsKICAgICAgICAgICAgY2FzZSAyODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzdG9wQW5pbWF0aW9uOiBmdW5jdGlvbiBzdG9wQW5pbWF0aW9uKCkgewogICAgICB2YXIgYW5pbWF0aW9uSGFuZGxlciA9IHRoaXMuYW5pbWF0aW9uSGFuZGxlciwKICAgICAgICB1cGRhdGVyID0gdGhpcy51cGRhdGVyOwogICAgICB0aGlzLnVwZGF0ZXIgPSAodXBkYXRlciArIDEpICUgOTk5OTk5OwogICAgICBpZiAoIWFuaW1hdGlvbkhhbmRsZXIpIHJldHVybjsKICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvbkhhbmRsZXIpOwogICAgfSwKICAgIGVtaXRFdmVudDogZnVuY3Rpb24gZW1pdEV2ZW50KHR5cGUsIHJpLCBjaSwgcm93LCBjZWlsKSB7CiAgICAgIHZhciBjZWlscyA9IHJvdy5jZWlscywKICAgICAgICByb3dJbmRleCA9IHJvdy5yb3dJbmRleDsKICAgICAgdGhpcy4kZW1pdCh0eXBlLCB7CiAgICAgICAgcm93OiBjZWlscywKICAgICAgICBjZWlsOiBjZWlsLAogICAgICAgIHJvd0luZGV4OiByb3dJbmRleCwKICAgICAgICBjb2x1bW5JbmRleDogY2kKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlUm93czogZnVuY3Rpb24gdXBkYXRlUm93cyhyb3dzLCBhbmltYXRpb25JbmRleCkgewogICAgICB2YXIgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgYW5pbWF0aW9uSGFuZGxlciA9IHRoaXMuYW5pbWF0aW9uSGFuZGxlciwKICAgICAgICBhbmltYXRpb24gPSB0aGlzLmFuaW1hdGlvbjsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1lcmdlZENvbmZpZyksIHt9LCB7CiAgICAgICAgZGF0YTogX3RvQ29uc3VtYWJsZUFycmF5KHJvd3MpCiAgICAgIH0pOwogICAgICB0aGlzLm5lZWRDYWxjID0gdHJ1ZTsKICAgICAgaWYgKHR5cGVvZiBhbmltYXRpb25JbmRleCA9PT0gJ251bWJlcicpIHRoaXMuYW5pbWF0aW9uSW5kZXggPSBhbmltYXRpb25JbmRleDsKICAgICAgaWYgKCFhbmltYXRpb25IYW5kbGVyKSBhbmltYXRpb24odHJ1ZSk7CiAgICB9CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHZhciBzdG9wQW5pbWF0aW9uID0gdGhpcy5zdG9wQW5pbWF0aW9uOwogICAgc3RvcEFuaW1hdGlvbigpOwogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;AAkDA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;QAAA;MAAA;IACA;EACA;EACAC;IACA;MACAC;MAEAC;QACA;AACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAH;QACA;AACA;AACA;AACA;AACA;QACAI;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;AACA;QACAC;QACA;AACA;AACA;AACA;AACA;AACA;QACAC;MACA;MAEAC;MAEAb;MAEAc;MAEAC;MAEAC;MAEAC;MAEAC;MAEAC;MAEAC;MAEAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACA9B;MACA;QAAA+B;MAEAC;MAEA;MAEAD;IACA;EACA;EACAE;IACAC;MACA;QAAAC;QAAAH;QAAAI;MAEA;MACA;MAEA;QACAJ;MACA;QACAI;MACA;IACA;IACAC;MACA;MAEAN;IACA;IACAO;MACA;QAAAC;QAAAC;MAEA;MAEAD;MAEAC;IACA;IACAT;MACA;QAAAU;QAAAC;MAEAC;MAEAF;MAEAC;MAEA;QAAAF;QAAAI;MAEAL;MAEAC;MAEAI;MAEA;MAEAR;IACA;IACAO;MACA;QAAAtC;MAEA;IACA;IACAoC;MACA;QAAAnC;QAAAS;QAAAC;MAEA;QACA;QAEA;MACA;MAEAV;MAEA;MAEA;IACA;IACAoC;MACA;QAAAvC;QAAAY;QAAAP;QAAAD;MAEA;QACAJ;UACA0C;UAEA;UAEAA;UAEA;QACA;MACA;MAEA1C;QAAA;UAAA2C;UAAAC;QAAA;MAAA;MAEA;MAEA;QACA5C;MACA;MAEAA;QAAA;UAAA6C;QAAA;MAAA;MAEA;MACA;IACA;IACAT;MACA;QAAApB;QAAAC;MAEA;QAAAd;MAEA;QAAA;MAAA;MAEA;MACA;QACA2C;MACA;QACAA;MACA;MAEA;MAEA;MAEA;IACA;IACAT;MAAA;MACA;QAAArB;QAAAb;MAEA;QAAAC;QAAAJ;MAEA;MAEA;MAEA;MAEA;MAEA;IACA;IACAyC;MACA;QAAAzB;MAEA;MAEA;MAEA;MAEA;IACA;IACAiB;MAAA;QAAAc;MAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAAC;cACAtB;cAEA;gBACAa;gBACAF;gBACAU;cACA;cAEA1B;cAEAb;cAEAyC;cAAA,MAEA7C;gBAAA8C;gBAAA;cAAA;cAAA;YAAA;cAAA,KAEAF;gBAAAE;gBAAA;cAAA;cAAAA;cAAA,OACA;gBAAA;cAAA;YAAA;cAAA,MACAzB;gBAAAyB;gBAAA;cAAA;cAAA;YAAA;cAGAC;cAEAjC;cACAA;cAEA6B;cACAA;cAAAG;cAAA,OAEA;gBAAA;cAAA;YAAA;cAAA,MACAzB;gBAAAyB;gBAAA;cAAA;cAAA;YAAA;cAEA;cAEA3B;cAEA6B;cACA;cAEAL;cACAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAlB;MACA;QAAAJ;MAEA;MAEA;MAEA4B;IACA;IACArB;MACA;QAAAY;MAEA;QACAF;QACAY;QACAV;QACAW;MACA;IACA;IACAC;MACA;QAAAhC;QAAAS;MAEA,oDACAjB;QACAhB;MAAA,EACA;MAEA;MAEA;MACA;IACA;EACA;EACAyD;IACA;IAEA5B;EACA;AACA","names":["name","mixins","props","config","type","default","data","ref","defaultConfig","header","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","mergedConfig","rowsData","rows","widths","heights","avgHeight","aligns","animationIndex","animationHandler","updater","needCalc","watch","calcData","stopAnimation","methods","handleHover","emitEvent","animation","afterAutoResizeMixinInit","onResize","calcWidths","calcHeights","calcHeaderData","calcRowsData","mergeConfig","calcAligns","row","ceils","rowIndex","scroll","columnNum","_this","start","rowLength","_context","animationNum","back","clearTimeout","ceil","columnIndex","updateRows","destroyed"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\n      <div\n        class=\"header-item\"\n        v-for=\"(headerItem, i) in header\"\n        :key=\"`${headerItem}${i}`\"\n        :style=\"`\n          height: ${mergedConfig.headerHeight}px;\n          line-height: ${mergedConfig.headerHeight}px;\n          width: ${widths[i]}px;\n        `\"\n        :align=\"aligns[i]\"\n        v-html=\"headerItem\"\n      />\n    </div>\n\n    <div\n      v-if=\"mergedConfig\"\n      class=\"rows\"\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\n    >\n      <div\n        class=\"row-item\"\n        v-for=\"(row, ri) in rows\"\n        :key=\"`${row.toString()}${row.scroll}`\"\n        :style=\"`\n          height: ${heights[ri]}px;\n          line-height: ${heights[ri]}px;\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\n        `\"\n      >\n        <div\n          class=\"ceil\"\n          v-for=\"(ceil, ci) in row.ceils\"\n          :key=\"`${ceil}${ri}${ci}`\"\n          :style=\"`width: ${widths[ci]}px;`\"\n          :align=\"aligns[ci]\"\n          v-html=\"ceil\"\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\n          @mouseleave=\"handleHover(false)\"\n        />\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-board',\n\n      defaultConfig: {\n        /**\n         * @description Board header\n         * @type {Array<String>}\n         * @default header = []\n         * @example header = ['column1', 'column2', 'column3']\n         */\n        header: [],\n        /**\n         * @description Board data\n         * @type {Array<Array>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Header background color\n         * @type {String}\n         * @default headerBGC = '#00BAFF'\n         */\n        headerBGC: '#00BAFF',\n        /**\n         * @description Odd row background color\n         * @type {String}\n         * @default oddRowBGC = '#003B51'\n         */\n        oddRowBGC: '#003B51',\n        /**\n         * @description Even row background color\n         * @type {String}\n         * @default evenRowBGC = '#003B51'\n         */\n        evenRowBGC: '#0A2732',\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Header height\n         * @type {Number}\n         * @default headerHeight = 35\n         */\n        headerHeight: 35,\n        /**\n         * @description Column width\n         * @type {Array<Number>}\n         * @default columnWidth = []\n         */\n        columnWidth: [],\n        /**\n         * @description Column align\n         * @type {Array<String>}\n         * @default align = []\n         * @example align = ['left', 'center', 'right']\n         */\n        align: [],\n        /**\n         * @description Show index\n         * @type {Boolean}\n         * @default index = false\n         */\n        index: false,\n        /**\n         * @description index Header\n         * @type {String}\n         * @default indexHeader = '#'\n         */\n        indexHeader: '#',\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Pause scroll when mouse hovered\n         * @type {Boolean}\n         * @default hoverPause = true\n         * @example hoverPause = true | false\n         */\n        hoverPause: true\n      },\n\n      mergedConfig: null,\n\n      header: [],\n\n      rowsData: [],\n\n      rows: [],\n\n      widths: [],\n\n      heights: [],\n\n      avgHeight: 0,\n\n      aligns: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0,\n\n      needCalc: false\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      this.animationIndex = 0\n\n      calcData()\n    }\n  },\n  methods: {\n    handleHover(enter, ri, ci, row, ceil){\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\n\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\n      if (!mergedConfig.hoverPause) return\n\n      if (enter) {\n        stopAnimation()\n      } else {\n        animation(true)\n      }\n    },\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcWidths, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcWidths()\n\n      calcHeights()\n    },\n    calcData () {\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\n\n      mergeConfig()\n\n      calcHeaderData()\n\n      calcRowsData()\n\n      const { calcWidths, calcHeights, calcAligns } = this\n\n      calcWidths()\n\n      calcHeights()\n\n      calcAligns()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcHeaderData () {\n      let { header, index, indexHeader} = this.mergedConfig\n\n      if (!header.length) {\n        this.header = []\n\n        return\n      }\n\n      header = [...header]\n\n      if (index) header.unshift(indexHeader)\n\n      this.header = header\n    },\n    calcRowsData () {\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\n\n      if (index) {\n        data = data.map((row, i) => {\n          row = [...row]\n\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\n\n          row.unshift(indexTag)\n\n          return row\n        })\n      }\n\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcWidths () {\n      const { width, mergedConfig, rowsData } = this\n\n      const { columnWidth, header } = mergedConfig\n\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n      let columnNum = 0\n      if (rowsData[0]) {\n        columnNum = rowsData[0].ceils.length\n      } else if (header.length) {\n        columnNum = header.length\n      }\n\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n      const widths = new Array(columnNum).fill(avgWidth)\n\n      this.widths = deepMerge(widths, columnWidth)\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig, header } = this\n\n      const { headerHeight, rowNum, data } = mergedConfig\n\n      let allHeight = height\n\n      if (header.length) allHeight -= headerHeight\n\n      const avgHeight = allHeight / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    calcAligns () {\n      const { header, mergedConfig } = this\n\n      const columnNum = header.length\n\n      let aligns = new Array(columnNum).fill('left')\n\n      const { align } = mergedConfig\n\n      this.aligns = deepMerge(aligns, align)\n    },\n    async animation (start = false) {\n      const { needCalc, calcHeights, calcRowsData } = this\n\n      if (needCalc) {\n        calcRowsData()\n        calcHeights()\n        this.needCalc = false\n      }\n\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n    emitEvent (type, ri, ci, row, ceil) {\n      const { ceils, rowIndex } = row\n\n      this.$emit(type, {\n        row: ceils,\n        ceil,\n        rowIndex,\n        columnIndex: ci\n      })\n    },\n    updateRows(rows, animationIndex) {\n      const { mergedConfig, animationHandler, animation } = this\n\n      this.mergedConfig = {\n        ...mergedConfig,\n        data: [...rows]\n      }\n\n      this.needCalc = true\n\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\n      if (!animationHandler) animation(true)\n    }\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"]}]}