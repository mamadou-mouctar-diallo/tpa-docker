{"remainingRequest":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox6\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox6\\src\\main.vue","mtime":1703850131645},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\babel.config.js","mtime":1691760298000},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1703850127068},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703850126584},{"path":"C:\\Users\\18117\\Desktop\\M2\\M2BIGDATA\\djangoYueProjectDviz\\big-screen-vue-datav-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1703850110565}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZS5qcyc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2Qm9yZGVyQm94NicsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBiYWNrZ3JvdW5kQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAndHJhbnNwYXJlbnQnCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnYm9yZGVyLWJveC02JywKICAgICAgZGVmYXVsdENvbG9yOiBbJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4zNSknLCAnZ3JheSddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKCkgewogICAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgICAgbWVyZ2VDb2xvcigpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbWVyZ2VDb2xvcjogZnVuY3Rpb24gbWVyZ2VDb2xvcigpIHsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICBkZWZhdWx0Q29sb3IgPSB0aGlzLmRlZmF1bHRDb2xvcjsKICAgICAgdGhpcy5tZXJnZWRDb2xvciA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbG9yLCB0cnVlKSwgY29sb3IgfHwgW10pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBtZXJnZUNvbG9yID0gdGhpcy5tZXJnZUNvbG9yOwogICAgbWVyZ2VDb2xvcigpOwogIH0KfTs="},{"version":3,"mappings":"AAgCA;AAEA;AAEA;AAEA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;QAAA;MAAA;IACA;IACAC;MACAF;MACAC;IACA;EACA;EACAE;IACA;MACAC;MAEAC;MAEAC;IACA;EACA;EACAC;IACAR;MACA;MAEAS;IACA;EACA;EACAC;IACAD;MACA;QAAAH;MAEA;IACA;EACA;EACAK;IACA;IAEAF;EACA;AACA","names":["name","mixins","props","color","type","default","backgroundColor","data","ref","defaultColor","mergedColor","watch","mergeColor","methods","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox6/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-6\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <polygon :fill=\"backgroundColor\" :points=\"`\n        9, 7 ${width - 9}, 7 ${width - 9}, ${height - 7} 9, ${height - 7}\n      `\" />\n\n      <circle :fill=\"mergedColor[1]\" cx=\"5\" cy=\"5\" r=\"2\"/>\n      <circle :fill=\"mergedColor[1]\" :cx=\"width - 5\" cy=\"5\" r=\"2\" />\n      <circle :fill=\"mergedColor[1]\" :cx=\"width - 5\" :cy=\"height - 5\" r=\"2\" />\n      <circle :fill=\"mergedColor[1]\" cx=\"5\" :cy=\"height - 5\" r=\"2\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`10, 4 ${width - 10}, 4`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`10, ${height - 4} ${width - 10}, ${height - 4}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`5, 70 5, ${height - 70}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 5}, 70 ${width - 5}, ${height - 70}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`3, 10, 3, 50`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`7, 30 7, 80`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 3}, 10 ${width - 3}, 50`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 7}, 30 ${width - 7}, 80`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`3, ${height - 10} 3, ${height - 50}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`7, ${height - 30} 7, ${height - 80}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 3}, ${height - 10} ${width - 3}, ${height - 50}`\" />\n      <polyline :stroke=\"mergedColor[0]\" :points=\"`${width - 7}, ${height - 30} ${width - 7}, ${height - 80}`\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize.js'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox6',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-6',\n\n      defaultColor: ['rgba(255, 255, 255, 0.35)', 'gray'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}